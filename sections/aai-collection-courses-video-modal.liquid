{% comment %} /workspaces/AAI/sections/aai-collection-courses-video-modal.liquid {% endcomment %}
<div class="collection-video-modal-section {{ section.settings.custom_class }}" id="video-modal-{{ section.id }}" style="display: none;" data-section-id="{{ section.id }}" data-section-type="aai-video-modal">
  <div class="video-modal-overlay"></div>
  <div class="video-modal-content">
    <button class="video-modal-close" aria-label="{{ 'general.accessibility.close_modal' | t }}">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24">
        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
      </svg>
    </button>
    <div class="video-modal-player">
      {% if section.settings.video_url.type == 'youtube' %}
        <iframe src="https://www.youtube.com/embed/{{ section.settings.video_url.id }}?enablejsapi=1&autoplay=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
      {% elsif section.settings.video_url.type == 'vimeo' %}
        <iframe src="https://player.vimeo.com/video/{{ section.settings.video_url.id }}?autoplay=0&loop=0&autopause=0" frameborder="0" allow="autoplay; fullscreen" allowfullscreen></iframe>
      {% elsif section.settings.hosted_video_url != blank %}
         <video controls src="{{ section.settings.hosted_video_url }}" poster="{{ section.settings.video_placeholder_image | image_url: width: 800 }}" style="width:100%; height:auto;"></video>
      {% else %}
        <p>{{ 'sections.video.no_video_selected' | t }}</p>
      {% endif %}
    </div>
    {% if section.settings.video_title != blank %}
      <h3 class="video-modal-title">{{ section.settings.video_title | escape }}</h3>
    {% endif %}
    {% if section.settings.video_description != blank %}
      <p class="video-modal-description">{{ section.settings.video_description }}</p>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "AAI Video Modal",
  "settings": [
    {
      "type": "video_url",
      "id": "video_url",
      "label": "Video URL (YouTube or Vimeo)",
      "accept": ["youtube", "vimeo"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc"
    },
    {
      "type": "url",
      "id": "hosted_video_url",
      "label": "Or Hosted Video URL (.mp4)"
    },
    {
      "type": "image_picker",
      "id": "video_placeholder_image",
      "label": "Video Placeholder Image"
    },
    {
      "type": "text",
      "id": "video_title",
      "label": "Video Title",
      "default": "Watch Our Course Overview"
    },
    {
      "type": "richtext",
      "id": "video_description",
      "label": "Video Description"
    },
    {
      "type": "text",
      "id": "custom_class",
      "label": "Custom CSS Class"
    }
  ],
  "presets": [
    {
      "name": "AAI Video Modal"
    }
  ]
}
{% endschema %}

<script>
// Basic script to handle modal display.
// More robust solution would be in a global JS file.
document.addEventListener('DOMContentLoaded', () => {
  const videoModalSection = document.getElementById('video-modal-{{ section.id }}');
  if (!videoModalSection) return;

  const closeButton = videoModalSection.querySelector('.video-modal-close');
  const overlay = videoModalSection.querySelector('.video-modal-overlay');

  function closeVideoModal() {
    videoModalSection.style.display = 'none';
    const iframe = videoModalSection.querySelector('iframe');
    const video = videoModalSection.querySelector('video');
    if (iframe && iframe.src.includes('youtube')) {
      iframe.contentWindow.postMessage('{'''event''':'''command''','''func''':'''pauseVideo''','''args''':''''}', '*');
    } else if (iframe && iframe.src.includes('vimeo')) {
      iframe.contentWindow.postMessage('{'''method''':'''pause'''}', '*');
    }
    if (video) {
      video.pause();
    }
  }

  if (closeButton) {
    closeButton.addEventListener('click', closeVideoModal);
  }
  if (overlay) {
    overlay.addEventListener('click', closeVideoModal);
  }

  // Expose a global function to open this specific modal
  // This is a simplified approach. A better way would be custom events.
  window.openAaiVideoModal_{{ section.id }} = (videoUrl, title = '', description = '') => {
    const iframe = videoModalSection.querySelector('iframe');
    const videoTag = videoModalSection.querySelector('video');
    const titleEl = videoModalSection.querySelector('.video-modal-title');
    const descEl = videoModalSection.querySelector('.video-modal-description');

    if (videoUrl) {
      if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {
        const videoId = videoUrl.split('v=')[1] || videoUrl.split('/').pop();
        if (iframe && videoId) iframe.src = `https://www.youtube.com/embed/${videoId}?enablejsapi=1&autoplay=1`;
        if (videoTag) videoTag.style.display = 'none';
        if (iframe) iframe.style.display = 'block';
      } else if (videoUrl.includes('vimeo.com')) {
        const videoId = videoUrl.split('/').pop();
        if (iframe && videoId) iframe.src = `https://player.vimeo.com/video/${videoId}?autoplay=1&loop=0&autopause=0`;
        if (videoTag) videoTag.style.display = 'none';
        if (iframe) iframe.style.display = 'block';
      } else if (videoTag) { // Assuming direct MP4 link
        videoTag.src = videoUrl;
        videoTag.style.display = 'block';
        if (iframe) iframe.style.display = 'none';
        videoTag.play();
      }
    }

    if (titleEl && title) titleEl.textContent = title;
    if (descEl && description) descEl.innerHTML = description; // Use innerHTML for richtext

    videoModalSection.style.display = 'flex'; // Or 'block' depending on CSS
  };

  // Example trigger - REMOVE THIS IN PRODUCTION
  // setTimeout(() => {
  //   if (typeof window.openAaiVideoModal_{{ section.id }} === 'function') {
  //     // window.openAaiVideoModal_{{ section.id }}('https://www.youtube.com/watch?v=_9VUPq3SxOc', 'Test Video', 'This is a test description.');
  //   }
  // }, 5000);
});
</script>
